@using Microsoft.AspNetCore.Identity
@using WebApplication1.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item me-2">
        <!-- Using btn-outline-secondary for the user link -->
        <a id="manage" class="btn btn-outline-secondary" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
            Hello @(UserManager.GetUserName(User))!
        </a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/")">
            <!-- Using btn-primary for the main Logout action -->
            <button id="logout" type="submit" class="btn btn-primary">Logout</button>
        </form>
    </li>
}
else
{
    // LOGGED OUT: Show Register and Login Buttons
    
    <!-- me-2 provides spacing between Register and Login buttons -->
    <li class="nav-item me-2">
        <!-- Using btn-outline-primary for the secondary action (Register) -->
        <a class="btn btn-outline-primary" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <!-- Using btn-primary for the main call to action (Login) -->
        <a class="btn btn-primary" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}